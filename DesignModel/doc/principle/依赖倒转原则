依赖倒转原则
A.高层模块不应该依赖低层模块。两个都应该依赖抽象
B.抽象不应该依赖细节。细节应该依赖抽象

如封装数据库的操作为低层模块,调用这些低层模块的为高层模块.
若新项目中,业务逻辑一致,也就是说高层模块不用改变,但是需要换用不同的数据库或存储信息方式,这是高层模块也失去了作用。

所以,我们应该让这些模块,不管高层模块还是低层模块,都让它们依赖抽象类(接口),只要抽象类(接口)是稳定的,那么任何一个的更改都不用但是其他
受到影响。

延伸---->
  里氏代换原则(LSP)
    一个软件实体如果使用的是一个父类的话,那么一定适用于其子类,而且它察觉不到父类对象和子类对象的区别。也就是说，把父类都替换成它们的
    子类,程序的行为没有变化
    
