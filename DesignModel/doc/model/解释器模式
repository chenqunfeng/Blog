给定一个语言,定义它的文法的一种表示,并定义一个解释器,这个解释器使用该表示来解释语言中的句子

解决的问题:
  如果一种特定类型的问题发生的频率足够高,那么可能就值得将该问题的各个实例表述为一个简单语言中的句子

Client:
  客户端,依赖Context和AbstractExpression

Context:
  包含解释器之外的一些全局信息

AbstractExpression:
  抽象表达式,声明一个抽象的解释操作,这个接口为抽象语法树种所有的节点所共享

TerminalExpression:
  终结符表达式,实现与文法中的终结符相关联的解释操作

NonterminalExpression:
  非终结符表达式


应用:
  当有一个语言需要解释执行,并且你可将该语言中的句子表示为一个抽象语法树时
  
好处:
  容易地改变和扩展文法,因为该模式使用类来表示文法规则, 你可以使用继承来改变或扩展该文法
  
