表示一个作用于某对象结构中的各元素的操作.它使你可以在不改变各元素的类的前提下定义作用于这些元素的新操作

情景:
  如果系统有比较稳定的数据结构,又有易于变化的算法的话,使用访问者模式就是比较合适的,因为访问者模式使得算法操作的增加变得容易。
  反之,如果这样的系统的数据结构对象易于变化,经常要有新的数据对象增加进来,就不适合使用访问者模式

Client:
  客户端,依赖Visitor和ObjectStructure
Vistitor:
  为该对象结构中ConcreteElement的每一个类声明一个Visit操作
  如visitA,visitB(但是这一部分应该是比较稳定的,例如世界上只有男人女人两种性别,别扯淡同性恋- -)
ConcreteVisitor1:
  具体访问者,实现每个由Visitor声明的操作
ObjectStructure:
  能枚举它的元素,可以提供一个高层的接口以允许访问者访问它的元素;依赖Element
Element:
  定义一个Accept操作,它以一个访问者为参数
ConcreteElementA:
  具体元素,实现Accept操作

好处:
  访问者模式的有点就是增加新的操作很容易,因为增加新的操作就以为着增加一个新的访问者,访问者模式将有关的行为集中到一个访问者对象中

坏处:
  增加新的数据结构变得困难
